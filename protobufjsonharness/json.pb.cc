// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: json.proto

#include "json.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr JSON_value::JSON_value(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct JSON_valueDefaultTypeInternal {
  constexpr JSON_valueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JSON_valueDefaultTypeInternal() {}
  union {
    JSON_value _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JSON_valueDefaultTypeInternal _JSON_value_default_instance_;
constexpr JSON_object::JSON_object(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entries_(){}
struct JSON_objectDefaultTypeInternal {
  constexpr JSON_objectDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JSON_objectDefaultTypeInternal() {}
  union {
    JSON_object _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JSON_objectDefaultTypeInternal _JSON_object_default_instance_;
constexpr JSON_key_value_pair::JSON_key_value_pair(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_(nullptr){}
struct JSON_key_value_pairDefaultTypeInternal {
  constexpr JSON_key_value_pairDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JSON_key_value_pairDefaultTypeInternal() {}
  union {
    JSON_key_value_pair _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JSON_key_value_pairDefaultTypeInternal _JSON_key_value_pair_default_instance_;
constexpr JSON_array::JSON_array(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct JSON_arrayDefaultTypeInternal {
  constexpr JSON_arrayDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JSON_arrayDefaultTypeInternal() {}
  union {
    JSON_array _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JSON_arrayDefaultTypeInternal _JSON_array_default_instance_;
constexpr JSON_array_item::JSON_array_item(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(nullptr){}
struct JSON_array_itemDefaultTypeInternal {
  constexpr JSON_array_itemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JSON_array_itemDefaultTypeInternal() {}
  union {
    JSON_array_item _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JSON_array_itemDefaultTypeInternal _JSON_array_item_default_instance_;
constexpr JSON_number::JSON_number(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct JSON_numberDefaultTypeInternal {
  constexpr JSON_numberDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JSON_numberDefaultTypeInternal() {}
  union {
    JSON_number _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JSON_numberDefaultTypeInternal _JSON_number_default_instance_;
constexpr JSON_true::JSON_true(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct JSON_trueDefaultTypeInternal {
  constexpr JSON_trueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JSON_trueDefaultTypeInternal() {}
  union {
    JSON_true _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JSON_trueDefaultTypeInternal _JSON_true_default_instance_;
constexpr JSON_false::JSON_false(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct JSON_falseDefaultTypeInternal {
  constexpr JSON_falseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JSON_falseDefaultTypeInternal() {}
  union {
    JSON_false _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JSON_falseDefaultTypeInternal _JSON_false_default_instance_;
constexpr JSON_null::JSON_null(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct JSON_nullDefaultTypeInternal {
  constexpr JSON_nullDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JSON_nullDefaultTypeInternal() {}
  union {
    JSON_null _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JSON_nullDefaultTypeInternal _JSON_null_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_json_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_json_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_json_2eproto = nullptr;

const uint32_t TableStruct_json_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_value, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::JSON_value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::JSON_value, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::JSON_object, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_key_value_pair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::JSON_key_value_pair, key_),
  PROTOBUF_FIELD_OFFSET(::JSON_key_value_pair, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::JSON_array, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_array_item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::JSON_array_item, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_number, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::JSON_number, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::JSON_number, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_true, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_false, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_null, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::JSON_value)},
  { 14, -1, -1, sizeof(::JSON_object)},
  { 21, -1, -1, sizeof(::JSON_key_value_pair)},
  { 29, -1, -1, sizeof(::JSON_array)},
  { 36, -1, -1, sizeof(::JSON_array_item)},
  { 43, -1, -1, sizeof(::JSON_number)},
  { 52, -1, -1, sizeof(::JSON_true)},
  { 58, -1, -1, sizeof(::JSON_false)},
  { 64, -1, -1, sizeof(::JSON_null)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_JSON_value_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_JSON_object_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_JSON_key_value_pair_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_JSON_array_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_JSON_array_item_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_JSON_number_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_JSON_true_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_JSON_false_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_JSON_null_default_instance_),
};

const char descriptor_table_protodef_json_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\njson.proto\"\320\001\n\nJSON_value\022\033\n\003obj\030\001 \001(\013"
  "2\014.JSON_objectH\000\022\032\n\003arr\030\002 \001(\0132\013.JSON_arr"
  "ayH\000\022\033\n\003num\030\003 \001(\0132\014.JSON_numberH\000\022\032\n\004tru"
  "e\030\004 \001(\0132\n.JSON_trueH\000\022\034\n\005false\030\005 \001(\0132\013.J"
  "SON_falseH\000\022\032\n\004null\030\006 \001(\0132\n.JSON_nullH\000\022"
  "\r\n\003str\030\007 \001(\tH\000B\007\n\005value\"4\n\013JSON_object\022%"
  "\n\007entries\030\001 \003(\0132\024.JSON_key_value_pair\">\n"
  "\023JSON_key_value_pair\022\013\n\003key\030\001 \001(\t\022\032\n\005val"
  "ue\030\002 \001(\0132\013.JSON_value\"-\n\nJSON_array\022\037\n\005i"
  "tems\030\001 \003(\0132\020.JSON_array_item\"-\n\017JSON_arr"
  "ay_item\022\032\n\005value\030\001 \001(\0132\013.JSON_value\"8\n\013J"
  "SON_number\022\016\n\004long\030\001 \001(\003H\000\022\020\n\006double\030\002 \001"
  "(\001H\000B\007\n\005value\"\013\n\tJSON_true\"\014\n\nJSON_false"
  "\"\013\n\tJSON_nullb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_json_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_json_2eproto = {
  false, false, 541, descriptor_table_protodef_json_2eproto, "json.proto", 
  &descriptor_table_json_2eproto_once, nullptr, 0, 9,
  schemas, file_default_instances, TableStruct_json_2eproto::offsets,
  file_level_metadata_json_2eproto, file_level_enum_descriptors_json_2eproto, file_level_service_descriptors_json_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_json_2eproto_getter() {
  return &descriptor_table_json_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_json_2eproto(&descriptor_table_json_2eproto);

// ===================================================================

class JSON_value::_Internal {
 public:
  static const ::JSON_object& obj(const JSON_value* msg);
  static const ::JSON_array& arr(const JSON_value* msg);
  static const ::JSON_number& num(const JSON_value* msg);
  static const ::JSON_true& true_(const JSON_value* msg);
  static const ::JSON_false& false_(const JSON_value* msg);
  static const ::JSON_null& null(const JSON_value* msg);
};

const ::JSON_object&
JSON_value::_Internal::obj(const JSON_value* msg) {
  return *msg->value_.obj_;
}
const ::JSON_array&
JSON_value::_Internal::arr(const JSON_value* msg) {
  return *msg->value_.arr_;
}
const ::JSON_number&
JSON_value::_Internal::num(const JSON_value* msg) {
  return *msg->value_.num_;
}
const ::JSON_true&
JSON_value::_Internal::true_(const JSON_value* msg) {
  return *msg->value_.true__;
}
const ::JSON_false&
JSON_value::_Internal::false_(const JSON_value* msg) {
  return *msg->value_.false__;
}
const ::JSON_null&
JSON_value::_Internal::null(const JSON_value* msg) {
  return *msg->value_.null_;
}
void JSON_value::set_allocated_obj(::JSON_object* obj) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (obj) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::JSON_object>::GetOwningArena(obj);
    if (message_arena != submessage_arena) {
      obj = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, obj, submessage_arena);
    }
    set_has_obj();
    value_.obj_ = obj;
  }
  // @@protoc_insertion_point(field_set_allocated:JSON_value.obj)
}
void JSON_value::set_allocated_arr(::JSON_array* arr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (arr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::JSON_array>::GetOwningArena(arr);
    if (message_arena != submessage_arena) {
      arr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, arr, submessage_arena);
    }
    set_has_arr();
    value_.arr_ = arr;
  }
  // @@protoc_insertion_point(field_set_allocated:JSON_value.arr)
}
void JSON_value::set_allocated_num(::JSON_number* num) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (num) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::JSON_number>::GetOwningArena(num);
    if (message_arena != submessage_arena) {
      num = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, num, submessage_arena);
    }
    set_has_num();
    value_.num_ = num;
  }
  // @@protoc_insertion_point(field_set_allocated:JSON_value.num)
}
void JSON_value::set_allocated_true_(::JSON_true* true_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (true_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::JSON_true>::GetOwningArena(true_);
    if (message_arena != submessage_arena) {
      true_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, true_, submessage_arena);
    }
    set_has_true_();
    value_.true__ = true_;
  }
  // @@protoc_insertion_point(field_set_allocated:JSON_value.true)
}
void JSON_value::set_allocated_false_(::JSON_false* false_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (false_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::JSON_false>::GetOwningArena(false_);
    if (message_arena != submessage_arena) {
      false_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, false_, submessage_arena);
    }
    set_has_false_();
    value_.false__ = false_;
  }
  // @@protoc_insertion_point(field_set_allocated:JSON_value.false)
}
void JSON_value::set_allocated_null(::JSON_null* null) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (null) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::JSON_null>::GetOwningArena(null);
    if (message_arena != submessage_arena) {
      null = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, null, submessage_arena);
    }
    set_has_null();
    value_.null_ = null;
  }
  // @@protoc_insertion_point(field_set_allocated:JSON_value.null)
}
JSON_value::JSON_value(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:JSON_value)
}
JSON_value::JSON_value(const JSON_value& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kObj: {
      _internal_mutable_obj()->::JSON_object::MergeFrom(from._internal_obj());
      break;
    }
    case kArr: {
      _internal_mutable_arr()->::JSON_array::MergeFrom(from._internal_arr());
      break;
    }
    case kNum: {
      _internal_mutable_num()->::JSON_number::MergeFrom(from._internal_num());
      break;
    }
    case kTrue: {
      _internal_mutable_true_()->::JSON_true::MergeFrom(from._internal_true_());
      break;
    }
    case kFalse: {
      _internal_mutable_false_()->::JSON_false::MergeFrom(from._internal_false_());
      break;
    }
    case kNull: {
      _internal_mutable_null()->::JSON_null::MergeFrom(from._internal_null());
      break;
    }
    case kStr: {
      _internal_set_str(from._internal_str());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:JSON_value)
}

inline void JSON_value::SharedCtor() {
clear_has_value();
}

JSON_value::~JSON_value() {
  // @@protoc_insertion_point(destructor:JSON_value)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void JSON_value::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void JSON_value::ArenaDtor(void* object) {
  JSON_value* _this = reinterpret_cast< JSON_value* >(object);
  (void)_this;
}
void JSON_value::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JSON_value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JSON_value::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:JSON_value)
  switch (value_case()) {
    case kObj: {
      if (GetArenaForAllocation() == nullptr) {
        delete value_.obj_;
      }
      break;
    }
    case kArr: {
      if (GetArenaForAllocation() == nullptr) {
        delete value_.arr_;
      }
      break;
    }
    case kNum: {
      if (GetArenaForAllocation() == nullptr) {
        delete value_.num_;
      }
      break;
    }
    case kTrue: {
      if (GetArenaForAllocation() == nullptr) {
        delete value_.true__;
      }
      break;
    }
    case kFalse: {
      if (GetArenaForAllocation() == nullptr) {
        delete value_.false__;
      }
      break;
    }
    case kNull: {
      if (GetArenaForAllocation() == nullptr) {
        delete value_.null_;
      }
      break;
    }
    case kStr: {
      value_.str_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void JSON_value::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_value)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_value::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .JSON_object obj = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_obj(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .JSON_array arr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_arr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .JSON_number num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_num(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .JSON_true true = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_true_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .JSON_false false = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_false_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .JSON_null null = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_null(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string str = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_str();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JSON_value.str"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_value::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_value)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .JSON_object obj = 1;
  if (_internal_has_obj()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::obj(this), target, stream);
  }

  // .JSON_array arr = 2;
  if (_internal_has_arr()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::arr(this), target, stream);
  }

  // .JSON_number num = 3;
  if (_internal_has_num()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::num(this), target, stream);
  }

  // .JSON_true true = 4;
  if (_internal_has_true_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::true_(this), target, stream);
  }

  // .JSON_false false = 5;
  if (_internal_has_false_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::false_(this), target, stream);
  }

  // .JSON_null null = 6;
  if (_internal_has_null()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::null(this), target, stream);
  }

  // string str = 7;
  if (_internal_has_str()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_str().data(), static_cast<int>(this->_internal_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JSON_value.str");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_value)
  return target;
}

size_t JSON_value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_value)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // .JSON_object obj = 1;
    case kObj: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.obj_);
      break;
    }
    // .JSON_array arr = 2;
    case kArr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.arr_);
      break;
    }
    // .JSON_number num = 3;
    case kNum: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.num_);
      break;
    }
    // .JSON_true true = 4;
    case kTrue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.true__);
      break;
    }
    // .JSON_false false = 5;
    case kFalse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.false__);
      break;
    }
    // .JSON_null null = 6;
    case kNull: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.null_);
      break;
    }
    // string str = 7;
    case kStr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_str());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_value::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    JSON_value::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_value::GetClassData() const { return &_class_data_; }

void JSON_value::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<JSON_value *>(to)->MergeFrom(
      static_cast<const JSON_value &>(from));
}


void JSON_value::MergeFrom(const JSON_value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JSON_value)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kObj: {
      _internal_mutable_obj()->::JSON_object::MergeFrom(from._internal_obj());
      break;
    }
    case kArr: {
      _internal_mutable_arr()->::JSON_array::MergeFrom(from._internal_arr());
      break;
    }
    case kNum: {
      _internal_mutable_num()->::JSON_number::MergeFrom(from._internal_num());
      break;
    }
    case kTrue: {
      _internal_mutable_true_()->::JSON_true::MergeFrom(from._internal_true_());
      break;
    }
    case kFalse: {
      _internal_mutable_false_()->::JSON_false::MergeFrom(from._internal_false_());
      break;
    }
    case kNull: {
      _internal_mutable_null()->::JSON_null::MergeFrom(from._internal_null());
      break;
    }
    case kStr: {
      _internal_set_str(from._internal_str());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_value::CopyFrom(const JSON_value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_value::IsInitialized() const {
  return true;
}

void JSON_value::InternalSwap(JSON_value* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_value::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[0]);
}

// ===================================================================

class JSON_object::_Internal {
 public:
};

JSON_object::JSON_object(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entries_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:JSON_object)
}
JSON_object::JSON_object(const JSON_object& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:JSON_object)
}

inline void JSON_object::SharedCtor() {
}

JSON_object::~JSON_object() {
  // @@protoc_insertion_point(destructor:JSON_object)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void JSON_object::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void JSON_object::ArenaDtor(void* object) {
  JSON_object* _this = reinterpret_cast< JSON_object* >(object);
  (void)_this;
}
void JSON_object::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JSON_object::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JSON_object::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_object)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_object::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .JSON_key_value_pair entries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_object::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_object)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .JSON_key_value_pair entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_object)
  return target;
}

size_t JSON_object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_object)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .JSON_key_value_pair entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_object::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    JSON_object::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_object::GetClassData() const { return &_class_data_; }

void JSON_object::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<JSON_object *>(to)->MergeFrom(
      static_cast<const JSON_object &>(from));
}


void JSON_object::MergeFrom(const JSON_object& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JSON_object)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_object::CopyFrom(const JSON_object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_object::IsInitialized() const {
  return true;
}

void JSON_object::InternalSwap(JSON_object* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_object::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[1]);
}

// ===================================================================

class JSON_key_value_pair::_Internal {
 public:
  static const ::JSON_value& value(const JSON_key_value_pair* msg);
};

const ::JSON_value&
JSON_key_value_pair::_Internal::value(const JSON_key_value_pair* msg) {
  return *msg->value_;
}
JSON_key_value_pair::JSON_key_value_pair(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:JSON_key_value_pair)
}
JSON_key_value_pair::JSON_key_value_pair(const JSON_key_value_pair& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    value_ = new ::JSON_value(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:JSON_key_value_pair)
}

inline void JSON_key_value_pair::SharedCtor() {
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
value_ = nullptr;
}

JSON_key_value_pair::~JSON_key_value_pair() {
  // @@protoc_insertion_point(destructor:JSON_key_value_pair)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void JSON_key_value_pair::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void JSON_key_value_pair::ArenaDtor(void* object) {
  JSON_key_value_pair* _this = reinterpret_cast< JSON_key_value_pair* >(object);
  (void)_this;
}
void JSON_key_value_pair::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JSON_key_value_pair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JSON_key_value_pair::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_key_value_pair)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_key_value_pair::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JSON_key_value_pair.key"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .JSON_value value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_key_value_pair::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_key_value_pair)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JSON_key_value_pair.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // .JSON_value value = 2;
  if (this->_internal_has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_key_value_pair)
  return target;
}

size_t JSON_key_value_pair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_key_value_pair)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .JSON_value value = 2;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_key_value_pair::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    JSON_key_value_pair::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_key_value_pair::GetClassData() const { return &_class_data_; }

void JSON_key_value_pair::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<JSON_key_value_pair *>(to)->MergeFrom(
      static_cast<const JSON_key_value_pair &>(from));
}


void JSON_key_value_pair::MergeFrom(const JSON_key_value_pair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JSON_key_value_pair)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (from._internal_has_value()) {
    _internal_mutable_value()->::JSON_value::MergeFrom(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_key_value_pair::CopyFrom(const JSON_key_value_pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_key_value_pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_key_value_pair::IsInitialized() const {
  return true;
}

void JSON_key_value_pair::InternalSwap(JSON_key_value_pair* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_key_value_pair::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[2]);
}

// ===================================================================

class JSON_array::_Internal {
 public:
};

JSON_array::JSON_array(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:JSON_array)
}
JSON_array::JSON_array(const JSON_array& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:JSON_array)
}

inline void JSON_array::SharedCtor() {
}

JSON_array::~JSON_array() {
  // @@protoc_insertion_point(destructor:JSON_array)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void JSON_array::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void JSON_array::ArenaDtor(void* object) {
  JSON_array* _this = reinterpret_cast< JSON_array* >(object);
  (void)_this;
}
void JSON_array::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JSON_array::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JSON_array::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_array)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_array::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .JSON_array_item items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_array::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_array)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .JSON_array_item items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_array)
  return target;
}

size_t JSON_array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_array)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .JSON_array_item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_array::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    JSON_array::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_array::GetClassData() const { return &_class_data_; }

void JSON_array::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<JSON_array *>(to)->MergeFrom(
      static_cast<const JSON_array &>(from));
}


void JSON_array::MergeFrom(const JSON_array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JSON_array)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_array::CopyFrom(const JSON_array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_array::IsInitialized() const {
  return true;
}

void JSON_array::InternalSwap(JSON_array* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_array::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[3]);
}

// ===================================================================

class JSON_array_item::_Internal {
 public:
  static const ::JSON_value& value(const JSON_array_item* msg);
};

const ::JSON_value&
JSON_array_item::_Internal::value(const JSON_array_item* msg) {
  return *msg->value_;
}
JSON_array_item::JSON_array_item(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:JSON_array_item)
}
JSON_array_item::JSON_array_item(const JSON_array_item& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::JSON_value(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:JSON_array_item)
}

inline void JSON_array_item::SharedCtor() {
value_ = nullptr;
}

JSON_array_item::~JSON_array_item() {
  // @@protoc_insertion_point(destructor:JSON_array_item)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void JSON_array_item::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete value_;
}

void JSON_array_item::ArenaDtor(void* object) {
  JSON_array_item* _this = reinterpret_cast< JSON_array_item* >(object);
  (void)_this;
}
void JSON_array_item::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JSON_array_item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JSON_array_item::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_array_item)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_array_item::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .JSON_value value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_array_item::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_array_item)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .JSON_value value = 1;
  if (this->_internal_has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_array_item)
  return target;
}

size_t JSON_array_item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_array_item)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .JSON_value value = 1;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_array_item::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    JSON_array_item::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_array_item::GetClassData() const { return &_class_data_; }

void JSON_array_item::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<JSON_array_item *>(to)->MergeFrom(
      static_cast<const JSON_array_item &>(from));
}


void JSON_array_item::MergeFrom(const JSON_array_item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JSON_array_item)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_value()) {
    _internal_mutable_value()->::JSON_value::MergeFrom(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_array_item::CopyFrom(const JSON_array_item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_array_item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_array_item::IsInitialized() const {
  return true;
}

void JSON_array_item::InternalSwap(JSON_array_item* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_array_item::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[4]);
}

// ===================================================================

class JSON_number::_Internal {
 public:
};

JSON_number::JSON_number(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:JSON_number)
}
JSON_number::JSON_number(const JSON_number& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kLong: {
      _internal_set_long_(from._internal_long_());
      break;
    }
    case kDouble: {
      _internal_set_double_(from._internal_double_());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:JSON_number)
}

inline void JSON_number::SharedCtor() {
clear_has_value();
}

JSON_number::~JSON_number() {
  // @@protoc_insertion_point(destructor:JSON_number)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void JSON_number::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void JSON_number::ArenaDtor(void* object) {
  JSON_number* _this = reinterpret_cast< JSON_number* >(object);
  (void)_this;
}
void JSON_number::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JSON_number::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JSON_number::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:JSON_number)
  switch (value_case()) {
    case kLong: {
      // No need to clear
      break;
    }
    case kDouble: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void JSON_number::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_number)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_number::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 long = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_long_(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double double = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _internal_set_double_(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_number::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_number)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 long = 1;
  if (_internal_has_long_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_long_(), target);
  }

  // double double = 2;
  if (_internal_has_double_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_double_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_number)
  return target;
}

size_t JSON_number::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_number)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // int64 long = 1;
    case kLong: {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_long_());
      break;
    }
    // double double = 2;
    case kDouble: {
      total_size += 1 + 8;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_number::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    JSON_number::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_number::GetClassData() const { return &_class_data_; }

void JSON_number::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<JSON_number *>(to)->MergeFrom(
      static_cast<const JSON_number &>(from));
}


void JSON_number::MergeFrom(const JSON_number& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JSON_number)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kLong: {
      _internal_set_long_(from._internal_long_());
      break;
    }
    case kDouble: {
      _internal_set_double_(from._internal_double_());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_number::CopyFrom(const JSON_number& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_number)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_number::IsInitialized() const {
  return true;
}

void JSON_number::InternalSwap(JSON_number* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_number::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[5]);
}

// ===================================================================

class JSON_true::_Internal {
 public:
};

JSON_true::JSON_true(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:JSON_true)
}
JSON_true::JSON_true(const JSON_true& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:JSON_true)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_true::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_true::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata JSON_true::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[6]);
}

// ===================================================================

class JSON_false::_Internal {
 public:
};

JSON_false::JSON_false(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:JSON_false)
}
JSON_false::JSON_false(const JSON_false& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:JSON_false)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_false::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_false::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata JSON_false::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[7]);
}

// ===================================================================

class JSON_null::_Internal {
 public:
};

JSON_null::JSON_null(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:JSON_null)
}
JSON_null::JSON_null(const JSON_null& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:JSON_null)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_null::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_null::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata JSON_null::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::JSON_value* Arena::CreateMaybeMessage< ::JSON_value >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_value >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_object* Arena::CreateMaybeMessage< ::JSON_object >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_object >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_key_value_pair* Arena::CreateMaybeMessage< ::JSON_key_value_pair >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_key_value_pair >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_array* Arena::CreateMaybeMessage< ::JSON_array >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_array >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_array_item* Arena::CreateMaybeMessage< ::JSON_array_item >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_array_item >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_number* Arena::CreateMaybeMessage< ::JSON_number >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_number >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_true* Arena::CreateMaybeMessage< ::JSON_true >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_true >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_false* Arena::CreateMaybeMessage< ::JSON_false >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_false >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_null* Arena::CreateMaybeMessage< ::JSON_null >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_null >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
