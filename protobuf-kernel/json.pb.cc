// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: json.proto

#include "json.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR JSON_value::JSON_value(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct JSON_valueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JSON_valueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JSON_valueDefaultTypeInternal() {}
  union {
    JSON_value _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JSON_valueDefaultTypeInternal _JSON_value_default_instance_;
PROTOBUF_CONSTEXPR JSON_object::JSON_object(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.kv_pair_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct JSON_objectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JSON_objectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JSON_objectDefaultTypeInternal() {}
  union {
    JSON_object _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JSON_objectDefaultTypeInternal _JSON_object_default_instance_;
PROTOBUF_CONSTEXPR JSON_key_value_pair::JSON_key_value_pair(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct JSON_key_value_pairDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JSON_key_value_pairDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JSON_key_value_pairDefaultTypeInternal() {}
  union {
    JSON_key_value_pair _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JSON_key_value_pairDefaultTypeInternal _JSON_key_value_pair_default_instance_;
PROTOBUF_CONSTEXPR JSON_array::JSON_array(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct JSON_arrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JSON_arrayDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JSON_arrayDefaultTypeInternal() {}
  union {
    JSON_array _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JSON_arrayDefaultTypeInternal _JSON_array_default_instance_;
PROTOBUF_CONSTEXPR JSON_array_item::JSON_array_item(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct JSON_array_itemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JSON_array_itemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JSON_array_itemDefaultTypeInternal() {}
  union {
    JSON_array_item _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JSON_array_itemDefaultTypeInternal _JSON_array_item_default_instance_;
PROTOBUF_CONSTEXPR JSON_number::JSON_number(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct JSON_numberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JSON_numberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JSON_numberDefaultTypeInternal() {}
  union {
    JSON_number _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JSON_numberDefaultTypeInternal _JSON_number_default_instance_;
PROTOBUF_CONSTEXPR JSON_null::JSON_null(
    ::_pbi::ConstantInitialized) {}
struct JSON_nullDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JSON_nullDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JSON_nullDefaultTypeInternal() {}
  union {
    JSON_null _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JSON_nullDefaultTypeInternal _JSON_null_default_instance_;
PROTOBUF_CONSTEXPR JSON_inp::JSON_inp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.obj_)*/nullptr
  , /*decltype(_impl_.kv_pair_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct JSON_inpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JSON_inpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JSON_inpDefaultTypeInternal() {}
  union {
    JSON_inp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JSON_inpDefaultTypeInternal _JSON_inp_default_instance_;
PROTOBUF_CONSTEXPR JSON_opt::JSON_opt(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct JSON_optDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JSON_optDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JSON_optDefaultTypeInternal() {}
  union {
    JSON_opt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JSON_optDefaultTypeInternal _JSON_opt_default_instance_;
static ::_pb::Metadata file_level_metadata_json_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_json_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_json_2eproto = nullptr;

const uint32_t TableStruct_json_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_value, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::JSON_value, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::JSON_value, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::JSON_object, _impl_.kv_pair_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_key_value_pair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::JSON_key_value_pair, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::JSON_key_value_pair, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::JSON_array, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_array_item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::JSON_array_item, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_number, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::JSON_number, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::JSON_number, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_null, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_inp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::JSON_inp, _impl_.obj_),
  PROTOBUF_FIELD_OFFSET(::JSON_inp, _impl_.kv_pair_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JSON_opt, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::JSON_opt, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::JSON_opt, _impl_.value_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::JSON_value)},
  { 12, -1, -1, sizeof(::JSON_object)},
  { 19, -1, -1, sizeof(::JSON_key_value_pair)},
  { 27, -1, -1, sizeof(::JSON_array)},
  { 34, -1, -1, sizeof(::JSON_array_item)},
  { 41, -1, -1, sizeof(::JSON_number)},
  { 50, -1, -1, sizeof(::JSON_null)},
  { 56, -1, -1, sizeof(::JSON_inp)},
  { 64, -1, -1, sizeof(::JSON_opt)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_JSON_value_default_instance_._instance,
  &::_JSON_object_default_instance_._instance,
  &::_JSON_key_value_pair_default_instance_._instance,
  &::_JSON_array_default_instance_._instance,
  &::_JSON_array_item_default_instance_._instance,
  &::_JSON_number_default_instance_._instance,
  &::_JSON_null_default_instance_._instance,
  &::_JSON_inp_default_instance_._instance,
  &::_JSON_opt_default_instance_._instance,
};

const char descriptor_table_protodef_json_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\njson.proto\"\226\001\n\nJSON_value\022\033\n\003obj\030\001 \001(\013"
  "2\014.JSON_objectH\000\022\032\n\003arr\030\002 \001(\0132\013.JSON_arr"
  "ayH\000\022\033\n\003num\030\003 \001(\0132\014.JSON_numberH\000\022\032\n\004nul"
  "l\030\004 \001(\0132\n.JSON_nullH\000\022\r\n\003str\030\005 \001(\tH\000B\007\n\005"
  "value\"4\n\013JSON_object\022%\n\007kv_pair\030\001 \003(\0132\024."
  "JSON_key_value_pair\">\n\023JSON_key_value_pa"
  "ir\022\013\n\003key\030\001 \001(\t\022\032\n\005value\030\002 \001(\0132\013.JSON_va"
  "lue\"-\n\nJSON_array\022\037\n\005items\030\001 \003(\0132\020.JSON_"
  "array_item\"-\n\017JSON_array_item\022\032\n\005value\030\001"
  " \001(\0132\013.JSON_value\"8\n\013JSON_number\022\016\n\004long"
  "\030\001 \001(\003H\000\022\020\n\006double\030\002 \001(\001H\000B\007\n\005value\"\013\n\tJ"
  "SON_null\"L\n\010JSON_inp\022\031\n\003obj\030\001 \001(\0132\014.JSON"
  "_object\022%\n\007kv_pair\030\002 \001(\0132\024.JSON_key_valu"
  "e_pair\"J\n\010JSON_opt\022\030\n\003inp\030\001 \001(\0132\t.JSON_i"
  "npH\000\022\033\n\003obj\030\002 \001(\0132\014.JSON_objectH\000B\007\n\005val"
  "ueb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_json_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_json_2eproto = {
    false, false, 610, descriptor_table_protodef_json_2eproto,
    "json.proto",
    &descriptor_table_json_2eproto_once, nullptr, 0, 9,
    schemas, file_default_instances, TableStruct_json_2eproto::offsets,
    file_level_metadata_json_2eproto, file_level_enum_descriptors_json_2eproto,
    file_level_service_descriptors_json_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_json_2eproto_getter() {
  return &descriptor_table_json_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_json_2eproto(&descriptor_table_json_2eproto);

// ===================================================================

class JSON_value::_Internal {
 public:
  static const ::JSON_object& obj(const JSON_value* msg);
  static const ::JSON_array& arr(const JSON_value* msg);
  static const ::JSON_number& num(const JSON_value* msg);
  static const ::JSON_null& null(const JSON_value* msg);
};

const ::JSON_object&
JSON_value::_Internal::obj(const JSON_value* msg) {
  return *msg->_impl_.value_.obj_;
}
const ::JSON_array&
JSON_value::_Internal::arr(const JSON_value* msg) {
  return *msg->_impl_.value_.arr_;
}
const ::JSON_number&
JSON_value::_Internal::num(const JSON_value* msg) {
  return *msg->_impl_.value_.num_;
}
const ::JSON_null&
JSON_value::_Internal::null(const JSON_value* msg) {
  return *msg->_impl_.value_.null_;
}
void JSON_value::set_allocated_obj(::JSON_object* obj) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (obj) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(obj);
    if (message_arena != submessage_arena) {
      obj = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, obj, submessage_arena);
    }
    set_has_obj();
    _impl_.value_.obj_ = obj;
  }
  // @@protoc_insertion_point(field_set_allocated:JSON_value.obj)
}
void JSON_value::set_allocated_arr(::JSON_array* arr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (arr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(arr);
    if (message_arena != submessage_arena) {
      arr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, arr, submessage_arena);
    }
    set_has_arr();
    _impl_.value_.arr_ = arr;
  }
  // @@protoc_insertion_point(field_set_allocated:JSON_value.arr)
}
void JSON_value::set_allocated_num(::JSON_number* num) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (num) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(num);
    if (message_arena != submessage_arena) {
      num = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, num, submessage_arena);
    }
    set_has_num();
    _impl_.value_.num_ = num;
  }
  // @@protoc_insertion_point(field_set_allocated:JSON_value.num)
}
void JSON_value::set_allocated_null(::JSON_null* null) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (null) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(null);
    if (message_arena != submessage_arena) {
      null = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, null, submessage_arena);
    }
    set_has_null();
    _impl_.value_.null_ = null;
  }
  // @@protoc_insertion_point(field_set_allocated:JSON_value.null)
}
JSON_value::JSON_value(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:JSON_value)
}
JSON_value::JSON_value(const JSON_value& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JSON_value* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kObj: {
      _this->_internal_mutable_obj()->::JSON_object::MergeFrom(
          from._internal_obj());
      break;
    }
    case kArr: {
      _this->_internal_mutable_arr()->::JSON_array::MergeFrom(
          from._internal_arr());
      break;
    }
    case kNum: {
      _this->_internal_mutable_num()->::JSON_number::MergeFrom(
          from._internal_num());
      break;
    }
    case kNull: {
      _this->_internal_mutable_null()->::JSON_null::MergeFrom(
          from._internal_null());
      break;
    }
    case kStr: {
      _this->_internal_set_str(from._internal_str());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:JSON_value)
}

inline void JSON_value::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_value();
}

JSON_value::~JSON_value() {
  // @@protoc_insertion_point(destructor:JSON_value)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JSON_value::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void JSON_value::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JSON_value::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:JSON_value)
  switch (value_case()) {
    case kObj: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.obj_;
      }
      break;
    }
    case kArr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.arr_;
      }
      break;
    }
    case kNum: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.num_;
      }
      break;
    }
    case kNull: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.null_;
      }
      break;
    }
    case kStr: {
      _impl_.value_.str_.Destroy();
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void JSON_value::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_value)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_value::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .JSON_object obj = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_obj(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .JSON_array arr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_arr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .JSON_number num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_num(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .JSON_null null = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_null(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string str = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_str();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "JSON_value.str"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_value::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_value)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .JSON_object obj = 1;
  if (_internal_has_obj()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::obj(this),
        _Internal::obj(this).GetCachedSize(), target, stream);
  }

  // .JSON_array arr = 2;
  if (_internal_has_arr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::arr(this),
        _Internal::arr(this).GetCachedSize(), target, stream);
  }

  // .JSON_number num = 3;
  if (_internal_has_num()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::num(this),
        _Internal::num(this).GetCachedSize(), target, stream);
  }

  // .JSON_null null = 4;
  if (_internal_has_null()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::null(this),
        _Internal::null(this).GetCachedSize(), target, stream);
  }

  // string str = 5;
  if (_internal_has_str()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_str().data(), static_cast<int>(this->_internal_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JSON_value.str");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_value)
  return target;
}

size_t JSON_value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_value)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // .JSON_object obj = 1;
    case kObj: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.obj_);
      break;
    }
    // .JSON_array arr = 2;
    case kArr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.arr_);
      break;
    }
    // .JSON_number num = 3;
    case kNum: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.num_);
      break;
    }
    // .JSON_null null = 4;
    case kNull: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.null_);
      break;
    }
    // string str = 5;
    case kStr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_str());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_value::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JSON_value::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_value::GetClassData() const { return &_class_data_; }


void JSON_value::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JSON_value*>(&to_msg);
  auto& from = static_cast<const JSON_value&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:JSON_value)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kObj: {
      _this->_internal_mutable_obj()->::JSON_object::MergeFrom(
          from._internal_obj());
      break;
    }
    case kArr: {
      _this->_internal_mutable_arr()->::JSON_array::MergeFrom(
          from._internal_arr());
      break;
    }
    case kNum: {
      _this->_internal_mutable_num()->::JSON_number::MergeFrom(
          from._internal_num());
      break;
    }
    case kNull: {
      _this->_internal_mutable_null()->::JSON_null::MergeFrom(
          from._internal_null());
      break;
    }
    case kStr: {
      _this->_internal_set_str(from._internal_str());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_value::CopyFrom(const JSON_value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_value::IsInitialized() const {
  return true;
}

void JSON_value::InternalSwap(JSON_value* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_value::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[0]);
}

// ===================================================================

class JSON_object::_Internal {
 public:
};

JSON_object::JSON_object(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:JSON_object)
}
JSON_object::JSON_object(const JSON_object& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JSON_object* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.kv_pair_){from._impl_.kv_pair_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:JSON_object)
}

inline void JSON_object::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.kv_pair_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

JSON_object::~JSON_object() {
  // @@protoc_insertion_point(destructor:JSON_object)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JSON_object::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.kv_pair_.~RepeatedPtrField();
}

void JSON_object::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JSON_object::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_object)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.kv_pair_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_object::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .JSON_key_value_pair kv_pair = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_kv_pair(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_object::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_object)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .JSON_key_value_pair kv_pair = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_kv_pair_size()); i < n; i++) {
    const auto& repfield = this->_internal_kv_pair(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_object)
  return target;
}

size_t JSON_object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_object)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .JSON_key_value_pair kv_pair = 1;
  total_size += 1UL * this->_internal_kv_pair_size();
  for (const auto& msg : this->_impl_.kv_pair_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_object::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JSON_object::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_object::GetClassData() const { return &_class_data_; }


void JSON_object::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JSON_object*>(&to_msg);
  auto& from = static_cast<const JSON_object&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:JSON_object)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.kv_pair_.MergeFrom(from._impl_.kv_pair_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_object::CopyFrom(const JSON_object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_object::IsInitialized() const {
  return true;
}

void JSON_object::InternalSwap(JSON_object* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.kv_pair_.InternalSwap(&other->_impl_.kv_pair_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_object::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[1]);
}

// ===================================================================

class JSON_key_value_pair::_Internal {
 public:
  static const ::JSON_value& value(const JSON_key_value_pair* msg);
};

const ::JSON_value&
JSON_key_value_pair::_Internal::value(const JSON_key_value_pair* msg) {
  return *msg->_impl_.value_;
}
JSON_key_value_pair::JSON_key_value_pair(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:JSON_key_value_pair)
}
JSON_key_value_pair::JSON_key_value_pair(const JSON_key_value_pair& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JSON_key_value_pair* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::JSON_value(*from._impl_.value_);
  }
  // @@protoc_insertion_point(copy_constructor:JSON_key_value_pair)
}

inline void JSON_key_value_pair::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

JSON_key_value_pair::~JSON_key_value_pair() {
  // @@protoc_insertion_point(destructor:JSON_key_value_pair)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JSON_key_value_pair::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
  if (this != internal_default_instance()) delete _impl_.value_;
}

void JSON_key_value_pair::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JSON_key_value_pair::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_key_value_pair)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_key_value_pair::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "JSON_key_value_pair.key"));
        } else
          goto handle_unusual;
        continue;
      // .JSON_value value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_key_value_pair::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_key_value_pair)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JSON_key_value_pair.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // .JSON_value value = 2;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_key_value_pair)
  return target;
}

size_t JSON_key_value_pair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_key_value_pair)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .JSON_value value = 2;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_key_value_pair::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JSON_key_value_pair::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_key_value_pair::GetClassData() const { return &_class_data_; }


void JSON_key_value_pair::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JSON_key_value_pair*>(&to_msg);
  auto& from = static_cast<const JSON_key_value_pair&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:JSON_key_value_pair)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::JSON_value::MergeFrom(
        from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_key_value_pair::CopyFrom(const JSON_key_value_pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_key_value_pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_key_value_pair::IsInitialized() const {
  return true;
}

void JSON_key_value_pair::InternalSwap(JSON_key_value_pair* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_key_value_pair::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[2]);
}

// ===================================================================

class JSON_array::_Internal {
 public:
};

JSON_array::JSON_array(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:JSON_array)
}
JSON_array::JSON_array(const JSON_array& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JSON_array* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:JSON_array)
}

inline void JSON_array::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

JSON_array::~JSON_array() {
  // @@protoc_insertion_point(destructor:JSON_array)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JSON_array::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void JSON_array::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JSON_array::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_array)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_array::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .JSON_array_item items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_array::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_array)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .JSON_array_item items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_array)
  return target;
}

size_t JSON_array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_array)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .JSON_array_item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_array::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JSON_array::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_array::GetClassData() const { return &_class_data_; }


void JSON_array::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JSON_array*>(&to_msg);
  auto& from = static_cast<const JSON_array&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:JSON_array)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_array::CopyFrom(const JSON_array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_array::IsInitialized() const {
  return true;
}

void JSON_array::InternalSwap(JSON_array* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_array::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[3]);
}

// ===================================================================

class JSON_array_item::_Internal {
 public:
  static const ::JSON_value& value(const JSON_array_item* msg);
};

const ::JSON_value&
JSON_array_item::_Internal::value(const JSON_array_item* msg) {
  return *msg->_impl_.value_;
}
JSON_array_item::JSON_array_item(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:JSON_array_item)
}
JSON_array_item::JSON_array_item(const JSON_array_item& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JSON_array_item* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::JSON_value(*from._impl_.value_);
  }
  // @@protoc_insertion_point(copy_constructor:JSON_array_item)
}

inline void JSON_array_item::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

JSON_array_item::~JSON_array_item() {
  // @@protoc_insertion_point(destructor:JSON_array_item)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JSON_array_item::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.value_;
}

void JSON_array_item::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JSON_array_item::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_array_item)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_array_item::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .JSON_value value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_array_item::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_array_item)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .JSON_value value = 1;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_array_item)
  return target;
}

size_t JSON_array_item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_array_item)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .JSON_value value = 1;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_array_item::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JSON_array_item::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_array_item::GetClassData() const { return &_class_data_; }


void JSON_array_item::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JSON_array_item*>(&to_msg);
  auto& from = static_cast<const JSON_array_item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:JSON_array_item)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::JSON_value::MergeFrom(
        from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_array_item::CopyFrom(const JSON_array_item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_array_item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_array_item::IsInitialized() const {
  return true;
}

void JSON_array_item::InternalSwap(JSON_array_item* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_array_item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[4]);
}

// ===================================================================

class JSON_number::_Internal {
 public:
};

JSON_number::JSON_number(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:JSON_number)
}
JSON_number::JSON_number(const JSON_number& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JSON_number* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kLong: {
      _this->_internal_set_long_(from._internal_long_());
      break;
    }
    case kDouble: {
      _this->_internal_set_double_(from._internal_double_());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:JSON_number)
}

inline void JSON_number::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_value();
}

JSON_number::~JSON_number() {
  // @@protoc_insertion_point(destructor:JSON_number)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JSON_number::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void JSON_number::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JSON_number::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:JSON_number)
  switch (value_case()) {
    case kLong: {
      // No need to clear
      break;
    }
    case kDouble: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void JSON_number::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_number)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_number::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 long = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_long_(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double double = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _internal_set_double_(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_number::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_number)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 long = 1;
  if (_internal_has_long_()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_long_(), target);
  }

  // double double = 2;
  if (_internal_has_double_()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_double_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_number)
  return target;
}

size_t JSON_number::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_number)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // int64 long = 1;
    case kLong: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_long_());
      break;
    }
    // double double = 2;
    case kDouble: {
      total_size += 1 + 8;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_number::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JSON_number::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_number::GetClassData() const { return &_class_data_; }


void JSON_number::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JSON_number*>(&to_msg);
  auto& from = static_cast<const JSON_number&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:JSON_number)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kLong: {
      _this->_internal_set_long_(from._internal_long_());
      break;
    }
    case kDouble: {
      _this->_internal_set_double_(from._internal_double_());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_number::CopyFrom(const JSON_number& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_number)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_number::IsInitialized() const {
  return true;
}

void JSON_number::InternalSwap(JSON_number* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_number::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[5]);
}

// ===================================================================

class JSON_null::_Internal {
 public:
};

JSON_null::JSON_null(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:JSON_null)
}
JSON_null::JSON_null(const JSON_null& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  JSON_null* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:JSON_null)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_null::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_null::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata JSON_null::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[6]);
}

// ===================================================================

class JSON_inp::_Internal {
 public:
  static const ::JSON_object& obj(const JSON_inp* msg);
  static const ::JSON_key_value_pair& kv_pair(const JSON_inp* msg);
};

const ::JSON_object&
JSON_inp::_Internal::obj(const JSON_inp* msg) {
  return *msg->_impl_.obj_;
}
const ::JSON_key_value_pair&
JSON_inp::_Internal::kv_pair(const JSON_inp* msg) {
  return *msg->_impl_.kv_pair_;
}
JSON_inp::JSON_inp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:JSON_inp)
}
JSON_inp::JSON_inp(const JSON_inp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JSON_inp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.obj_){nullptr}
    , decltype(_impl_.kv_pair_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_obj()) {
    _this->_impl_.obj_ = new ::JSON_object(*from._impl_.obj_);
  }
  if (from._internal_has_kv_pair()) {
    _this->_impl_.kv_pair_ = new ::JSON_key_value_pair(*from._impl_.kv_pair_);
  }
  // @@protoc_insertion_point(copy_constructor:JSON_inp)
}

inline void JSON_inp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.obj_){nullptr}
    , decltype(_impl_.kv_pair_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

JSON_inp::~JSON_inp() {
  // @@protoc_insertion_point(destructor:JSON_inp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JSON_inp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.obj_;
  if (this != internal_default_instance()) delete _impl_.kv_pair_;
}

void JSON_inp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JSON_inp::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_inp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.obj_ != nullptr) {
    delete _impl_.obj_;
  }
  _impl_.obj_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.kv_pair_ != nullptr) {
    delete _impl_.kv_pair_;
  }
  _impl_.kv_pair_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_inp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .JSON_object obj = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_obj(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .JSON_key_value_pair kv_pair = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_kv_pair(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_inp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_inp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .JSON_object obj = 1;
  if (this->_internal_has_obj()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::obj(this),
        _Internal::obj(this).GetCachedSize(), target, stream);
  }

  // .JSON_key_value_pair kv_pair = 2;
  if (this->_internal_has_kv_pair()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::kv_pair(this),
        _Internal::kv_pair(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_inp)
  return target;
}

size_t JSON_inp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_inp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .JSON_object obj = 1;
  if (this->_internal_has_obj()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.obj_);
  }

  // .JSON_key_value_pair kv_pair = 2;
  if (this->_internal_has_kv_pair()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.kv_pair_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_inp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JSON_inp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_inp::GetClassData() const { return &_class_data_; }


void JSON_inp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JSON_inp*>(&to_msg);
  auto& from = static_cast<const JSON_inp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:JSON_inp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_obj()) {
    _this->_internal_mutable_obj()->::JSON_object::MergeFrom(
        from._internal_obj());
  }
  if (from._internal_has_kv_pair()) {
    _this->_internal_mutable_kv_pair()->::JSON_key_value_pair::MergeFrom(
        from._internal_kv_pair());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_inp::CopyFrom(const JSON_inp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_inp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_inp::IsInitialized() const {
  return true;
}

void JSON_inp::InternalSwap(JSON_inp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JSON_inp, _impl_.kv_pair_)
      + sizeof(JSON_inp::_impl_.kv_pair_)
      - PROTOBUF_FIELD_OFFSET(JSON_inp, _impl_.obj_)>(
          reinterpret_cast<char*>(&_impl_.obj_),
          reinterpret_cast<char*>(&other->_impl_.obj_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_inp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[7]);
}

// ===================================================================

class JSON_opt::_Internal {
 public:
  static const ::JSON_inp& inp(const JSON_opt* msg);
  static const ::JSON_object& obj(const JSON_opt* msg);
};

const ::JSON_inp&
JSON_opt::_Internal::inp(const JSON_opt* msg) {
  return *msg->_impl_.value_.inp_;
}
const ::JSON_object&
JSON_opt::_Internal::obj(const JSON_opt* msg) {
  return *msg->_impl_.value_.obj_;
}
void JSON_opt::set_allocated_inp(::JSON_inp* inp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (inp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(inp);
    if (message_arena != submessage_arena) {
      inp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, inp, submessage_arena);
    }
    set_has_inp();
    _impl_.value_.inp_ = inp;
  }
  // @@protoc_insertion_point(field_set_allocated:JSON_opt.inp)
}
void JSON_opt::set_allocated_obj(::JSON_object* obj) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (obj) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(obj);
    if (message_arena != submessage_arena) {
      obj = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, obj, submessage_arena);
    }
    set_has_obj();
    _impl_.value_.obj_ = obj;
  }
  // @@protoc_insertion_point(field_set_allocated:JSON_opt.obj)
}
JSON_opt::JSON_opt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:JSON_opt)
}
JSON_opt::JSON_opt(const JSON_opt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JSON_opt* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kInp: {
      _this->_internal_mutable_inp()->::JSON_inp::MergeFrom(
          from._internal_inp());
      break;
    }
    case kObj: {
      _this->_internal_mutable_obj()->::JSON_object::MergeFrom(
          from._internal_obj());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:JSON_opt)
}

inline void JSON_opt::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_value();
}

JSON_opt::~JSON_opt() {
  // @@protoc_insertion_point(destructor:JSON_opt)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JSON_opt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void JSON_opt::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JSON_opt::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:JSON_opt)
  switch (value_case()) {
    case kInp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.inp_;
      }
      break;
    }
    case kObj: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.obj_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void JSON_opt::Clear() {
// @@protoc_insertion_point(message_clear_start:JSON_opt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSON_opt::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .JSON_inp inp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_inp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .JSON_object obj = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_obj(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSON_opt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JSON_opt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .JSON_inp inp = 1;
  if (_internal_has_inp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::inp(this),
        _Internal::inp(this).GetCachedSize(), target, stream);
  }

  // .JSON_object obj = 2;
  if (_internal_has_obj()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::obj(this),
        _Internal::obj(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JSON_opt)
  return target;
}

size_t JSON_opt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JSON_opt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // .JSON_inp inp = 1;
    case kInp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.inp_);
      break;
    }
    // .JSON_object obj = 2;
    case kObj: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.obj_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSON_opt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JSON_opt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSON_opt::GetClassData() const { return &_class_data_; }


void JSON_opt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JSON_opt*>(&to_msg);
  auto& from = static_cast<const JSON_opt&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:JSON_opt)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kInp: {
      _this->_internal_mutable_inp()->::JSON_inp::MergeFrom(
          from._internal_inp());
      break;
    }
    case kObj: {
      _this->_internal_mutable_obj()->::JSON_object::MergeFrom(
          from._internal_obj());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSON_opt::CopyFrom(const JSON_opt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JSON_opt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_opt::IsInitialized() const {
  return true;
}

void JSON_opt::InternalSwap(JSON_opt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata JSON_opt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_json_2eproto_getter, &descriptor_table_json_2eproto_once,
      file_level_metadata_json_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::JSON_value*
Arena::CreateMaybeMessage< ::JSON_value >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_value >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_object*
Arena::CreateMaybeMessage< ::JSON_object >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_object >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_key_value_pair*
Arena::CreateMaybeMessage< ::JSON_key_value_pair >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_key_value_pair >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_array*
Arena::CreateMaybeMessage< ::JSON_array >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_array >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_array_item*
Arena::CreateMaybeMessage< ::JSON_array_item >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_array_item >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_number*
Arena::CreateMaybeMessage< ::JSON_number >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_number >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_null*
Arena::CreateMaybeMessage< ::JSON_null >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_null >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_inp*
Arena::CreateMaybeMessage< ::JSON_inp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_inp >(arena);
}
template<> PROTOBUF_NOINLINE ::JSON_opt*
Arena::CreateMaybeMessage< ::JSON_opt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JSON_opt >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
